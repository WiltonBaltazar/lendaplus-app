services:
  # MySQL Database (latest stable 8.x)
  database:
    image: mysql:8.0
    container_name: app_database
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: laravel_app
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin:5.2-apache
    container_name: app_phpmyadmin
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: laravel_user
      PMA_PASSWORD: laravel_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "8080:80"
    depends_on:
      - database
    networks:
      - app_network

  # Laravel Backend
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: app_backend
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=database
      - DB_PORT=3306
      - DB_DATABASE=laravel_app
      - DB_USERNAME=laravel_user
      - DB_PASSWORD=laravel_password
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - database
    networks:
      - app_network

  # Nginx for Laravel (latest stable)
  webserver:
    image: nginx:1.25-alpine
    container_name: app_webserver
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app_network

  # Next.js Frontend (Development)
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile.dev  # Changed to use dev Dockerfile
    container_name: app_frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_LARAVEL_API_URL=http://backend:8000/api/v1  # Updated to use internal network
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app  # Mount source code for live reloading
      - /app/node_modules  # Prevent overwriting node_modules
      - /app/.next  # Prevent overwriting .next build cache
    depends_on:
      - backend
    networks:
      - app_network
    # Optional: restart policy for development
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  app_network:
    driver: bridge